# Generated by Django 3.0.8 on 2021-03-20 02:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.IntegerField()),
            ],
            options={
                'db_table': 'Administrator',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizer_id', models.IntegerField()),
                ('event_id', models.IntegerField()),
                ('event_type', models.CharField(max_length=45)),
                ('event_name', models.CharField(max_length=50)),
                ('venue', models.CharField(max_length=100)),
                ('upvote', models.IntegerField()),
                ('date_start', models.DateField(auto_now=True)),
                ('date_end', models.DateField(auto_now=True)),
                ('image', models.FileField(null=True, upload_to='')),
                ('video', models.FileField(null=True, upload_to='')),
                ('cancellation', models.BinaryField(verbose_name=1)),
                ('cancellationDate', models.DateField(auto_now=True)),
                ('description', models.CharField(max_length=200)),
                ('targetLocation', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('pword', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('mobileNum', models.IntegerField()),
                ('country', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=200)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Events')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Requesttopart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_time', models.DateField(auto_now=True)),
                ('description', models.CharField(max_length=200)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Requesttopart',
            },
        ),
        migrations.CreateModel(
            name='Requesttoorg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_time', models.DateField(auto_now=True)),
                ('description', models.CharField(max_length=200)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Requesttoorg',
            },
        ),
        migrations.CreateModel(
            name='Requesttoadmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_time', models.DateField(auto_now=True)),
                ('description', models.CharField(max_length=200)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Requesttoadmin',
            },
        ),
        migrations.CreateModel(
            name='Participants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants_id', models.IntegerField()),
                ('registered_date', models.DateField(auto_now=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Events')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Participants',
            },
        ),
        migrations.CreateModel(
            name='Organizers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizer_id', models.IntegerField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Organizers',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.CharField(max_length=100)),
                ('notif_type', models.IntegerField()),
                ('admin_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Administrator')),
                ('organizer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Organizers')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users')),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.AddField(
            model_name='administrator',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meteroEvents.Users'),
        ),
    ]
